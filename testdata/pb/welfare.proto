syntax = "proto3";
package welfare.v1;
option go_package = "rulego/testdata/pb/welfare;welfare";

// @GORS @Path(/v1/welfare)
service Welfare {
  // 查询签到状态
  // @GORS @Post @Path(/say/hello) @ProtoJSONBinding @ProtoJSONRender
  rpc GetSignInState(GetSignInStateReq) returns (GetSignInStateResp) {}

  // 获取任务
  rpc GetTask(GetTaskReq) returns (Task) {}
  // 获取任务列表
  rpc GetTaskList(GetTaskListReq) returns (GetTaskListResp) {}
  // 上报完成情况
  rpc ReportTaskCompletion(ReportTaskCompletionReq) returns (ReportTaskCompletionResp) {}
  // 领取任务奖励
  rpc ReceiveTaskReward (ReceiveTaskRewardReq) returns (ReceiveTaskRewardResp) {}
}

message GetTaskReq{
  uint32 task_id = 1;
  string project = 2;
  UserStatus user_status = 3;
}

message UserStatus {
  string uid = 1;
  bool is_login = 2;
}

message GetTaskListReq {
  string project = 1;
  UserStatus user_status = 2;
}
message GetTaskListResp {
  repeated Task tasks = 1;
}
message Task {
  uint32 id = 1;
  // 任务key recharge, buy_chapter, view_reader, read_new_book, view_classify, add_desktop, login
  string key = 2;
  // 标题
  string name = 3;
  // 描述
  string desc = 4;
  // 任务场景：0 每日任务 1 成长任务 2 新手任务
  int32 kind = 5;
  // 是否展示进度条
  bool show_process = 7;
  // 总进度
  int32 total_process = 8;
  // 奖励类型 0:金币 1:vip
  int32 reward_type = 9;
  // 奖励数量
  int32 reward_num = 10;
  // 按钮链接
  string button_jump_link = 11;
  TaskCompletion completion = 12;
}
message TaskCompletion {
  // 展示进度条时，进度条的百分值
  int32 process = 6;
  // 任务状态 0:未完成 1:已完成 2:已领取
  uint32 status = 10;
}

enum TaskKind {
  UNKNOWN = 0;
  VIEW = 3;
  ShardBook = 4;
  DesktopStart = 5;
  AddCalendarReminder = 6;
  SignSubscribe = 7;
}

message ReportTaskCompletionReq {
  TaskKind kind = 1;
  string uid = 2;
  string project = 3;
  // 详情数据
  map<string, string> kvs = 4; // eg. {"action":"a", "page":"reader"}
}
message ReportTaskCompletionResp {}

message ReceiveTaskRewardReq {
  string uid = 1;
  int32 task_id = 2;
  string project = 3;
  UserStatus user_status = 4;
}
message ReceiveTaskRewardResp {
  int32 task_id = 1;
}

message GetSignInStateReq {
  string uid = 1; // 用户id
}

message GetSignInStateResp {
  // 今日已经签到
  bool today_signed = 1;
  // 连续签到天数
  int32 consecutive_no = 2;
  // 最后签到时间
  int64 last_time_unix = 3;
  // 最后获币
  int32 last_coin = 4;
  // 下一次的连续签到天数
  int32 next_consecutive_no = 5;
  // 下一次获币数量
  int32 next_coin = 6;
}

